#
# How-To
#
# Run:
# ./start.sh
#
# Kibana dashboard restore:
# curl -X PUT http://localhost:9200/kibana-int/dashboard/SensorDashboard -T dashboards/SensorDashboard.json
#
# Kibana dashboard backup:
# curl -s -X GET http://localhost:9200/kibana-int/dashboard/SensorDashboard/_source > dashboards/SensorDashboard.json
# 
#
# Test (elasticsearch must be running):
# http://localhost:9200/_search?pretty
#
# delete old data: 
# apt-get install python-pip
# pip install elasticsearch-curator
#
# Older than one day:
# /usr/local/bin/curator --host localhost delete --older-than 1
#
# Delete all (but hopefully keep the Kibana configuration):
# /usr/local/bin/curator --host localhost delete --disk-space 0.0002
#
# Index all log files:
#
# cat logdata*.txt | nc -q 5 localhost 3333
#

input {
#	stdin {
#		type => "sensorlog"
#	}

	tcp { 
		type => "sensorlog"
		port => 3333
	} 
}


filter {
	if [type] == "sensorlog" {
		# try the temperature and humidity logs
		grok {
			match => { "message" => "%{SENSORLOG1}"}
			patterns_dir => ["./patterns"]
			add_tag => ["sensorlog1"]
		}
        
		# ... finally drop all unknown messages
		if "_grokparsefailure" in [tags] {
			drop { }
		}

		mutate {
			# provided by Sensor Log 1
			convert => [ "TEMPERATURE", "float" ]
			convert => [ "HUMIDITY", "float" ]
		}

		date {
			match => ["LOGDATE" , "yyyy-MM-dd HH:mm:ss"]
			target => "@timestamp"
		}

        # remove obsolete information
        mutate {
            remove_field => [ "LOGDATE" ]
            remove_field => [ "message" ]
            remove_field => [ "host" ]
        }
   
     }
}
 
output {
	#we leave this so that when we debug running logstash from the command line we can see the output that will be stored in elasticsearch
	#if "_grokparsefailure" in [tags] {
		stdout {
			codec => rubydebug
		}
	#}

	#again for security purposes our elasticserach installation only runs on localhost.
	if "_grokparsefailure" not in [tags] {
		elasticsearch {
			protocol => "http"
			host => "localhost"
			# avoid duplicated entries
			document_id => "%{md5sum}"
			cluster => "sensorcluster"
		}
	}
}


